{"version":3,"file":"gridControls.js","sourceRoot":"","sources":["gridControls.ts"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\n/* eslint-env node, browser, jquery */\nimport {baseSettings} from \"./cTabWidgetType\";\n\n(<any>window).browser = (() => {\n    return (<any>window).browser || (<any>window).chrome || (<any>window).msBrowser;\n})();\n\nconst styleElem = (<any>document).head.appendChild(document.createElement('style'));\n\n\nimport CTabSettings from \"./settingsMenu\";\nimport * as CTabWidgetTypes from './cTabWidgetType';\nimport Picker from 'vanilla-picker';\nimport 'modules/jquery.textfill.min.js';\nimport * as $ from 'jquery';\nimport * as weatherEl from './weatherControls';\n\n\n// grid return object\ninterface CTabGrid {\n    initialize: () => void;\n    saveGrid: () => string;\n    simpleAdd: (type: string, settings: baseSettings, backgroundColor: string, textColor: string) => void;\n    debug: (sampleConfig: boolean, addSampleWidgets: boolean) => void;\n\n    // todo define config as type\n    setConfig: (config: any[]) => void;\n    getConfig: () => object[];\n}\n\nfunction grid(): CTabGrid {\n    let grid: any;\n    let widgets: CTabWidgetTypes.CTabWidget[] = [];\n    let widgetColorPickerOpen: boolean = false;\n    let dirty: boolean = false;\n    const options = {\n        // Muuri options\n        dragEnabled: true,\n        layoutOnInit: false,\n        layout: {\n            fillGaps: false,\n            horizontal: false,\n            alignRight: false,\n            alignBottom: false,\n            rounding: false\n        },\n        sortData: {\n            id: function (item: any, _element: any) {\n                return parseFloat(item._id);\n            },\n            title: function (_item: any, element: any) {\n                const ctabBody: any = [].slice.call(element.children[0].children).filter((el: HTMLElement) => el.classList.contains(\"ctab-widget-body\"))[0];\n                if (ctabBody.classList.contains('ctab-item-clock')) {\n                    return \"ZZZ\";\n                }\n                if (ctabBody.classList.contains('ctab-item-note')) {\n                    return \"ZZZ\";\n                }\n                return ctabBody.children[0].innerText.toUpperCase();\n            }\n        }\n    };\n\n    const initialize = function (): void {\n        const muuriCopy = (window as any).Muuri;\n        grid = new muuriCopy(\".grid\", options);\n        load();\n\n\n        // Save whenever you leave the screen\n        // TODO: fix with muuri\n        // @ts-ignore - no return for not showing a before-unload alert\n        window.onbeforeunload = function () {\n            // dirty state is implemented loosely (did not care much before, dirty in the probability of change)\n            // so an extra check is also added comparing the current state to the saved state\n            if (hasChanges() && CTabSettings.getShowUnsavedWarning()) {\n                return \"You have unsaved changes on this page. Do you want to leave this page and discard your changes or stay on this page?\";\n            }\n            // service.saveGrid(); // Disabled to enable dev edit\n        };\n\n\n        // TODO: fix with muuri\n        // service.grid.on(\"change\", function (event, items) {\n        //     dirty = true;\n        //     // When you change the title of a widget, a gridstack onChange event is retrieved with\n        //     // items === 'undefined'.\n        //     if (typeof items !== 'undefined') {\n        //         for (let i = 0; i < items.length; i++) {\n        //             if (items[i].id in service.widgets) {\n        //                 service.update(items[i].id, items[i]);\n        //                 // Call to textfill library, dynamically adapting the font size\n        //                 $('#' + items[i].id).textfill({\n        //                     minFontPixels: 10,\n        //                     allowOverflow: true,\n        //                 });\n        //             }\n        //         }\n        //     }\n        // });\n\n        // Call to textfill library, calculate font sizes that make the text fit in the boxes.\n        widgets.forEach(i => ($('#' + i.id) as any).textfill({\n            minFontPixels: 12,\n            allowOverflow: true,\n        }));\n        // Start clocks\n        startTime();\n        document.querySelectorAll(\".ctab-item-note\").forEach(note => {\n            note.addEventListener('change', noteChanged);\n            note.addEventListener('keyup', noteChanged);\n        });\n        // Set dirty to false, since note widgets might have set the state to dirty\n        dirty = false;\n\n        ($('.ctab-item-clock') as any).textfill({\n            minFontPixels: 10,\n            allowOverflow: true,\n        });\n    };\n\n    const getConfig = () => {\n        let lsConfig = window.localStorage.getItem(\"CTabConfig\") || \"{}\";\n        let config = [];\n        try {\n            config = JSON.parse(lsConfig);\n        } catch (error) {\n            console.error(`Config could not be parsed, found configuration:`, lsConfig);\n            console.error(error);\n        }\n        return config;\n    };\n\n    const setConfig = (config: any[]) =>  {\n        if (config.length >= 1)\n            window.localStorage.setItem(\"CTabConfig\", JSON.stringify(config));\n        else {\n            console.log(\"config too small\", config);\n        }\n    };\n    // Returns message if save call is executed or not\n    const saveGrid = () => {\n        if (hasChanges()) {\n            service.setConfig(getDashboardConfig());\n            dirty = false;\n            return \"Configuration saved!\";\n        } else {\n            return \"nothing to save\";\n        }\n    };\n\n    const debug = (sampleConfig: boolean, addSampleWidgets: boolean) =>  {\n        console.log(\"debug:\");\n        if (sampleConfig) {\n            console.log(\"using sample config\");\n            let sampleConfiguration = [{\n                settings: {\"width\": 2, \"height\": 2, title: \"github\"},\n                contentUrl: 'https://www.github.com',\n                newTab: CTabSettings.getNewTab()\n            }];\n            service.setConfig(sampleConfiguration);\n        }\n        if (addSampleWidgets) {\n            addWidgetToGrid(new CTabWidgetTypes.LinkWidget(widgets.length, {\n                width: 1,\n                height: 1,\n                title: \"hallo!\", url: \"https://github.com\"\n            }, \"rgba(255,255,255,0.5)\", \"rgba(0,0,0,1)\", CTabSettings.getNewTab()));\n        }\n    };\n\n    const simpleAdd = function (type: string, settings: baseSettings, backgroundColor: string, textColor: string) {\n        addWidgetToGrid(\n            new CTabWidgetTypes.cTabTypeMap[type](widgets.length, settings, backgroundColor, textColor));\n    };\n\n    // Define return object\n    let service: CTabGrid = {\n        initialize: initialize,\n        saveGrid: saveGrid,\n        simpleAdd: simpleAdd,\n        debug: debug,\n        setConfig: setConfig,\n        getConfig: getConfig\n    };\n\n    const toggleWidgetColorPicker = (isOpen: boolean): void => {\n        widgetColorPickerOpen = isOpen;\n    };\n\n    const noteChanged = () => {\n        dirty = true;\n    };\n\n    const hasChanges = () => {\n        let saved = service.getConfig();\n        let current = getDashboardConfig();\n        // compare strings since object compare is always different with ==\n        if (JSON.stringify(saved) !== JSON.stringify(current)) {\n            if (dirty) {\n                return true;\n            }\n            console.log(\"Changes exist but dirty is false\");\n            return true;\n        }\n        return false;\n    };\n\n    const removeWidget = function (id: number) {\n        // Get the outer muuri cell\n        let innerId = document.getElementById(id.toString());\n        let cell = innerId!.parentElement!.parentElement;\n\n        if (cell) {\n            // remove from the grid (ui only)\n            grid.remove([cell], {removeElements: true, layout: true});\n\n            // also remove from widgets, otherwise no changes will be detected on saving.\n            delete widgets[id];\n        }\n    };\n\n    const addWidgetToGrid = function (widget: any) {\n        let itemElem = document.createElement('div');\n        itemElem.innerHTML = widget.widgetTemplate();\n\n        let textColOpen = false;\n\n        itemElem.firstChild!.addEventListener('mouseover', () => {\n            if (!widgetColorPickerOpen) {\n                const controlPanel = document.getElementById(`controls-${widget.id}`)!;\n                const controlDragHandle = document.getElementById(`drag-handle-${widget.id}`)!;\n                const biggerZIndex = \"4\";\n\n                controlPanel.classList.remove('hidden');\n                controlDragHandle.classList.remove('hidden');\n                controlPanel.style.zIndex = biggerZIndex;\n                controlPanel.parentElement!.style.zIndex = biggerZIndex;\n                controlPanel.parentElement!.parentElement!.style.zIndex = biggerZIndex;\n            }\n        });\n\n\n        itemElem!.firstChild!.addEventListener('mouseout', () => {\n            if (!textColOpen) {\n                const controlPanel = document.getElementById(`controls-${widget.id}`)!;\n                const controlDragHandle = document.getElementById(`drag-handle-${widget.id}`)!;\n                const smallerZIndex = \"1\";\n                controlPanel.style.zIndex = smallerZIndex;\n                controlPanel.parentElement!.style.zIndex = smallerZIndex;\n                controlPanel.parentElement!.parentElement!.style.zIndex = smallerZIndex;\n                controlPanel.classList.add('hidden');\n                controlDragHandle.classList.add('hidden');\n            }\n        });\n        grid.add(itemElem.firstChild, {index: widget.id});\n\n        new Picker({\n            parent: document.getElementById(`${widget.id}-text-color`)!,\n            popup: 'right', // 'right'(default), 'left', 'top', 'bottom'\n            editor: false,\n            color: widget.textColor || '#000000',\n            onChange: (newCol) => {\n                (document as any).documentElement.style.setProperty(`--${widget.id}-text-color`, newCol.rgbaString);\n                widget.textColor = newCol.rgbaString;\n            },\n            onDone: (newCol) => {\n                widget.textColor = newCol.rgbaString;\n            },\n            onOpen: () => {\n                toggleWidgetColorPicker(true);\n                textColOpen = true;\n            },\n            onClose: () => {\n                toggleWidgetColorPicker(false);\n                textColOpen = false;\n            }\n        });\n        new Picker({\n            parent: document.getElementById(`${widget.id}-background-color`)!,\n            popup: 'right', // 'right'(default), 'left', 'top', 'bottom'\n            editor: false,\n            color: widget.backgroundColor || '#000000',\n            onChange: (newCol) => {\n                (document as any).documentElement.style.setProperty(`--${widget.id}-background-color`, newCol.rgbaString);\n\n                let widgetElement = document.getElementById(`${widget.id}`);\n                if (widgetElement) {\n                    widgetElement.style.setProperty(`--item-background-color`, newCol.rgbaString);\n                    styleElem.innerHTML = `#${widget.id}:before {background-color: ${newCol.rgbaString}`;\n                }\n                widget.backgroundColor = newCol.rgbaString;\n            },\n            onDone: (newCol) => {\n                widget.backgroundColor = newCol.rgbaString;\n            },\n            onOpen: () => {\n                toggleWidgetColorPicker(true);\n                textColOpen = true;\n            },\n            onClose: () => {\n                toggleWidgetColorPicker(false);\n                textColOpen = false;\n            }\n        });\n\n\n        document.getElementById(`delete-${widget.id}`)!.addEventListener('click', () => removeWidget(widget.id));\n\n\n        if (widget.type === 'weather') {\n            widget.settings.width = widget.settings.width > 1 ? widget.settings.width : 2;\n            widget.settings.height = widget.settings.height > 1 ? widget.settings.height : 2;\n            widget.settings.city = widget.settings.city ? widget.settings.city : \"delft\";\n            setTimeout(() => {\n                weatherEl.addWeatherListener(widget, widget.id);\n                (document.getElementById(widget.id + '-cityInput') as HTMLInputElement).value = widget.settings.city;\n                weatherEl.getWeather(widget.id, widget.settings.city);\n            }, 100);\n        }\n    };\n\n\n\n    const getDashboardConfig = function () {\n        return widgets.map(widget => widget.getConfig());\n    };\n\n\n    // Loads the user configuration in the dashboard\n    const load = function () {\n        loadModel();\n        loadGrid();\n    };\n\n\n    const loadModel = function () {\n        let widgetData: any = service.getConfig();\n        widgets = [];\n        widgetData = Array.isArray(widgetData) ? widgetData : [];\n\n        widgets = widgetData.map((widget: any) => new CTabWidgetTypes.cTabTypeMap[widget.type](widget.id, widget.settings, widget.backgroundColor, widget.textColor));\n\n    };\n\n    const loadGrid = function () {\n        // add the widgets to the grid\n        for (let key in widgets) {\n            if (widgets.hasOwnProperty(key)) {\n                let widget = widgets[key];\n                addWidgetToGrid(widget);\n            }\n        }\n\n    };\n\n    return service;\n\n}\n\n\n// Independent functions\n// From w3 to add clock\nfunction startTime() {\n    let clocks = document.querySelectorAll('.ctab-item-clock');\n    if (clocks.length > 0) {\n        const todayDate = new Date();\n        const timezone = CTabSettings.getTimezone();\n        const today = todayDate.toLocaleTimeString('en-US', {\n            hour: '2-digit',\n            minute: '2-digit',\n            second: '2-digit',\n            timeZone: timezone,\n            hour12: false\n        });\n        clocks.forEach(a => a.children[0].innerHTML = today);\n        setTimeout(startTime, 500);\n    }\n}\n\nexport default grid;\n"]}